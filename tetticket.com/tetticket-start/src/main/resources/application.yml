server:
  port: 1122
  tomcat:
    threads:
      max: 200

spring:
  # application
  application:
    name: tetticket.com
  #DBS
  datasource:
    hikari:
      maximum-pool-size: 20  # Số lượng tối đa kết nối
      minimum-idle: 5        # Số lượng kết nối tối thiểu trong pool
    url: jdbc:mysql://localhost:3316/vetautet
    username: root
    password: root1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  jackson:
    serialization:
      indent-output: true
  mail:
    host: in-v3.mailjet.com
    port: ${MAIL_PORT}
    username: ${MAIL_API}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          from: mekongocop@gmail.com
  # Redis server connection settings
  data:
    redis:
      host: 127.0.0.1 # Host of the Redis server
      port: 6319 # Port of the Redis server for connection
      password: ""  # Password for connecting to the Redis server (default is empty)
      lettuce:
        pool: # Connection pool settings
          max-active: 10000 # Maximum number of active connections in the pool (uses -1 for no limit)
          max-idle: 8 # Maximum number of idle connections in the pool
          min-idle: 0 # Minimum number of idle connections in the pool
          max-wait: -1ms # Maximum wait time to get a connection from the pool (uses -1 for no limit)
      connect-timeout: 30000 # Connection timeout (in milliseconds)
    threads:
      virtual:
        enabled: true
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 20MB
resilience4j:
  circuitbreaker:
    instances:
      checkRandom:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        #        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

  ratelimiter:
    instances:
      backendA:
        limitForPeriod: 2
        limitRefreshPeriod: 10s
        timeoutDuration: 0
        registerHealthIndicator: true
        eventConsumerBufferSize: 100
      backendB:
        limitForPeriod: 5
        limitRefreshPeriod: 10s
        timeoutDuration: 3s
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - '*'
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true

jwt:
  access-token-expiration-in-ms: 3600000 # 1 hour
  refresh-token-expiration-in-ms: 604800000 # 7 days
  secret: ${JWT_SECRET}
  issuer: TaiTitans

mailjet:
  api:
    key: ${MAIL_API}
    secret: ${MAIL_PASSWORD}


#Swagger
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none

aws:
  access:
    key:
      id: ${AWS_ACCESS_KEY_ID}
  secret:
    access:
        key: ${AWS_SECRET_ACCESS_KEY}
  s3:
    region: ap-southeast-1
    bucket: tetticket